[["index.html", "Nick Bergeron’s Reproducible Data Science Final Project Chapter 1 About", " Nick Bergeron’s Reproducible Data Science Final Project Nick Bergeron 2023-03-20 Chapter 1 About This is a book detailing my final project in Reproducible Data Science. "],["creating-my-project-databse-using-sqlite.html", "Chapter 2 Creating My Project Databse Using SQLite 2.1 Create aspen_plot table 2.2 Create trees table 2.3 Create measurements table", " Chapter 2 Creating My Project Databse Using SQLite First, I need to load packages DBI and RSQLite. Then I need establish a connection to my database in R. This step will create the specified database if it does not exist. library(DBI) library(RSQLite) ms_thesis_db &lt;- dbConnect(RSQLite::SQLite(), &quot;ms_thesis.db&quot;) 2.1 Create aspen_plot table I need to first recreate the table in R to mirror my .csv file. This allows me to then populate the table with data from my .csv file. I have to specify the name of each column as well as data type and necessary constraints. The query at the end confirms that I have populated the table correctly. dbExecute(ms_thesis_db, &quot;CREATE TABLE aspen_plots ( plot_id integer PRIMARY KEY, utm_x_start double, utm_y_start double, utm_x_end double, utm_y_end double) ;&quot;) aspen_plots &lt;- read.csv(&quot;Aspen_Transect-GPS-Points_refined_final.csv&quot;, header = T) dplyr::glimpse(aspen_plots) dbWriteTable(ms_thesis_db, &quot;aspen_plots&quot;, aspen_plots, append = TRUE) dbGetQuery(ms_thesis_db, &quot;SELECT * FROM aspen_plots LIMIT 10;&quot;) 2.2 Create trees table Same process as the aspen_plot data, but this time I need to create and AUTOINCREMENT Primary Key. This is a simple process that is done by adding PRIMARY KEY AUTOINCREMENT to the tree_id column. This is necessary since I do not have a unique identifier in my trees table. To populate the table, I first need to add the tree_id column, then import the rest of the columns from my .csv. dbExecute(ms_thesis_db, &quot;CREATE TABLE trees ( tree_id INTEGER PRIMARY KEY AUTOINCREMENT, tree_number integer NOT NULL, plot_id integer NOT NULL, year integer, FOREIGN KEY (plot_id) REFERENCES aspen_plots(plot_id) );&quot;) trees &lt;- read.csv(&quot;2022_aspen_data_suckers_tree.csv&quot;, header = TRUE) trees$tree_id &lt;- 1:nrow(trees) dplyr::glimpse(trees) library(dplyr) trees &lt;- select(trees, tree_id, tree_number, plot_id, year) dbWriteTable(ms_thesis_db, &quot;trees&quot;, trees, append = TRUE) dbGetQuery(ms_thesis_db, &quot;SELECT * FROM trees LIMIT 10;&quot;) 2.3 Create measurements table This is the same process as the trees table. I populated the tree_id column using the trees table. INSTER INTO was not working for me so I used a workaround that involved selecting the specific tree_id column from trees and using cbind to add it to the measurements table. dbExecute(ms_thesis_db, &quot;CREATE TABLE measurements ( measurement_id INTEGER PRIMARY KEY AUTOINCREMENT, tree_id integer, height float CHECK (height&lt;=1000), cag float CHECK (cag&lt;=300), dbh float CHECK (dbh &lt;=20), winter_browse integer CHECK (winter_browse &lt;=1), summer_browse integer CHECK (summer_browse &lt;=1), new_sucker integer CHECK (new_sucker &lt;=1), FOREIGN KEY (tree_id) REFERENCES trees (tree_id) );&quot;) measurements &lt;- read.csv(&quot;2022_aspen_data_suckers_measurements_all.csv&quot;, header = TRUE) tree_id&lt;- dbGetQuery(conn = ms_thesis_db, statement = &quot;SELECT tree_id FROM trees;&quot;) measurements &lt;- cbind(measurements, tree_id) measurements$measurement_id &lt;- 1:nrow(measurements) measurements &lt;- select(measurements, measurement_id, tree_id, height, cag, dbh,winter_browse, summer_browse, new_sucker) dbWriteTable(ms_thesis_db, &quot;measurements&quot;, measurements, append = TRUE) dbGetQuery(ms_thesis_db, &quot;SELECT * FROM measurements LIMIT 10&quot;) This concludes the the first chapter of my Reproducible Data Science project book. My database is a simple one, but it that is because my data is straightforward. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
